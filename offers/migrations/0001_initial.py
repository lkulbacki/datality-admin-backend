# Generated by Django 3.1.7 on 2021-05-23 19:41

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EntriesCrs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_url_source', models.TextField(blank=True, null=True)),
                ('c_url_product', models.TextField(blank=True, null=True)),
                ('c_heading', models.TextField(blank=True, null=True)),
                ('c_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('brand_id', models.IntegerField(blank=True, null=True)),
                ('shop_id', models.IntegerField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('f_duplicate', models.BooleanField(blank=True, null=True)),
                ('f_eol', models.BooleanField(blank=True, null=True)),
                ('f_moved', models.BooleanField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('checked_at', models.DateTimeField(blank=True, null=True)),
                ('f_sol', models.BooleanField(blank=True, null=True)),
                ('category_slug', models.TextField(blank=True, null=True)),
                ('migration_source', models.TextField(blank=True, null=True)),
                ('heading_clean', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'entries_crs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_url', models.TextField(unique=True)),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('shop_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('checked_at', models.DateTimeField(blank=True, null=True)),
                ('product_url_slug', models.TextField(blank=True, null=True)),
                ('brand_id', models.IntegerField(blank=True, null=True)),
                ('heading', models.TextField(blank=True, null=True)),
                ('category_slug', models.TextField(blank=True, null=True)),
                ('f_eol', models.BooleanField(blank=True, null=True)),
                ('f_sol', models.BooleanField(blank=True, null=True)),
                ('heading_clean', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'offers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('shop_id', models.IntegerField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('checked_at', models.DateTimeField(blank=True, null=True)),
                ('offer_id', models.IntegerField()),
                ('brand_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'prices',
                'managed': False,
            },
        ),
    ]
